#!/usr/bin/env ruby
require_relative '../lib/test'
require_relative '../lib/checkerrors'
require_relative '../lib/raisingerrors'

lint = Test.new(ARGV[0])
lint.check_file
lint.read_file
lint.content.each_with_index do |line, index|
  find_error = CheckErrors.new(line, index)
  RaisingErrors.new.raise_an_error(1, index) if find_error.check_whitespaces?
  RaisingErrors.new.raise_an_error(2, index) if find_error.check_length?
  RaisingErrors.new.raise_an_error(3, index) if find_error.check_parentes_count?
  RaisingErrors.new.raise_an_error(4, index) if find_error.check_bracket_count?
  RaisingErrors.new.raise_an_error(5, index) if find_error.check_curly_count?
  RaisingErrors.new.raise_an_issue(6, index) if find_error.check_pipes_count?
  RaisingErrors.new.raise_an_issue(10, index) unless find_error.valid_string?
  find_error.check_spacing
  find_error.check_spaces
  sleep(0.3)
end
puts 'No offences detected'.colorize(color: :green) if ObjectSpace.each_object(RaisingErrors).count.zero?
